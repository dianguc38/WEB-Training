focus in:
- input field
- example.com/index.php/?inject = query
- becaful with param defaut was insert by client occur break query correct , check parram in BS!
- Nose.js -> MongoDB (https://blog.websecurify.com/2014/08/hacking-nodejs-and-mongodb.html)
- send data by curl https://medium.com/@petehouston/upload-files-with-curl-93064dcccc76?fbclid=IwAR1J_8D6M_fEYXM1eDOmA8rO3SkJxDjePiQbk27fGdP8wCHS9PDhHM9guHc
==========================
/dev/fd is symlinked to /proc/self/fd
LFI exploits rely on environment conditions quite a lot, ways to overcome it depend on the version of PHP, so first we need to see its php version to be able to show the most reasonable attack! !!
============================
The full list of field-name characters that PHP converts to _ (underscore) is the following (not just dot):
chr(32) ( ) (space)
chr(46) (.) (dot)
chr(91) ([) (open square bracket)
chr(128) - chr(159) (various)
================================================
 if (window.XMLHttpRequest)
            {// code for IE7+, Firefox, Chrome, Opera, Safari
                xmlhttp=new XMLHttpRequest();
            }
            else
            {// code for IE6, IE5
            xmlhttp=new ActiveXObject("Microsoft.XMLHTTP");
            }
 -------> warning version(XXE) send data XML
===============================================
+Read file configure in php
  -Ccontact.php -X../../tofile -> -X file destination
+Write shell
  -oQueueDirectory=/../../.. CVE-2016-1003
=========================================
bypass array===array with old PHP
0x100000000 = 4294967296

<?php

parse_str('test[4294967296]=admin&&test[1]=user', $post);
$test= $post["test"];
$array = ['admin','user'];
var_dump($test === $array);
var_dump($test[4294967296]);
var_dump($array[0]);
var_dump($test[4294967296] === $array[0]);
?>
===========================================

